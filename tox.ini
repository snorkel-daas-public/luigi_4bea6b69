[tox]
requires =
    tox>=4.22 # `dependency_groups` needed
    tox-uv>=1.19
envlist = py{38,39,310,311,312}-{cdh,hdp,core,contrib,apache,aws,gcloud,postgres,unixsocket,azureblob,dropbox}, visualiser, docs, flake8
skipsdist = True

[pytest]
addopts = --cov=luigi --cov-report=xml -vv --strict-markers --ignore-glob="**/_*" --fulltrace
testpaths = test
markers =
    contrib: tests related to luigi/contrib
    apache: tests related to apache
    aws: tests related to AWS
    postgres: tests related to postgresql
    mysql: tests related to mysql
    scheduler: tests related to scheduler
    cdh: tests related to cdh
    hdp: tests related to hdp
    gcloud: tests related to GCP
    unixsocket: tests related to unixsocket
    dropbox: tests related to dropbox
    azureblob: tests related to azure

[testenv]
runner = uv-venv-lock-runner
allowlist_externals = {toxinidir}/scripts/ci/*.sh
dependency_groups =
    core: common
    contrib: common
    apache: common
    aws: common
    postgres: test_postgres
    mysql: common
    scheduler: common
    cdh: test_cdh
    hdp: test_hdp
    gcloud: test_gcloud
    unixsocket: test_unixsocket
    dropbox: test_dropbox
    azureblob: common
passenv = USER, JAVA_HOME, POSTGRES_USER, DATAPROC_TEST_PROJECT_ID, GCS_TEST_PROJECT_ID, GCS_TEST_BUCKET, GOOGLE_APPLICATION_CREDENTIALS, CI, DROPBOX_APP_TOKEN, DOCKERHUB_TOKEN, GITHUB_ACTIONS, OVERRIDE_SKIP_CI_TESTS
setenv =
    LC_ALL = en_US.utf-8
    cdh: HADOOP_DISTRO=cdh
    cdh: HADOOP_HOME={toxinidir}/.tox/hadoop-cdh
    hdp: HADOOP_DISTRO=hdp
    hdp: HADOOP_HOME={toxinidir}/.tox/hadoop-hdp
    LUIGI_CONFIG_PATH={toxinidir}/test/testconfig/luigi.cfg
    COVERAGE_PROCESS_START={toxinidir}/.coveragerc
    FULL_COVERAGE=true
    AWS_DEFAULT_REGION=us-east-1
    AWS_ACCESS_KEY_ID=accesskey
    AWS_SECRET_ACCESS_KEY=secretkey
    AZURITE_ACCOUNT_NAME=devstoreaccount1
    AZURITE_ACCOUNT_KEY=YXp1cml0ZQ==
    AZURITE_CUSTOM_DOMAIN=localhost:10000
commands =
    cdh,hdp: {toxinidir}/scripts/ci/setup_hadoop_env.sh
    azureblob: {toxinidir}/scripts/ci/install_start_azurite.sh {toxinidir}/scripts/ci
    {envpython} --version
    ## main commands
    contrib: {envpython} test/runtests.py -m contrib {posargs:}
    apache: {envpython} test/runtests.py -m apache {posargs:}
    aws: {envpython} test/runtests.py -m aws {posargs:}
    postgres: {envpython} test/runtests.py -m postgres {posargs:}
    scheduler: {envpython} test/runtests.py -m scheduler {posargs:}
    cdh,hdp: {envpython} test/runtests.py -m minicluster {posargs:}
    gcloud: {envpython} test/runtests.py -m gcloud {posargs:}
    unixsocket: {envpython} test/runtests.py -m unixsocket {posargs:}
    dropbox: {envpython} test/runtests.py -m dropbox {posargs:}
    azureblob: {envpython} test/runtests.py -m azureblob {posargs:}
    core: {envpython} test/runtests.py --doctest-modules -m "not minicluster and not gcloud and not postgres and not unixsocket and not contrib and not apache and not aws and not azureblob and not dropbox" {posargs:}
    ##
    azureblob: {toxinidir}/scripts/ci/stop_azurite.sh

[testenv:visualiser]
runner = uv-venv-lock-runner
dependency_groups = visualizer
passenv = {[testenv]passenv}
setenv =
    LC_ALL = en_US.utf-8
    LUIGI_CONFIG_PATH={toxinidir}/test/testconfig/luigi.cfg
    TEST_VISUALISER=1
commands =
    python --version
    pytest test/visualiser

# Flake8 Configuration, inspired from https://gitlab.com/pycqa/flake8/blob/master/tox.ini
# By putting it here, local flake8 runs will also pick it up.
[flake8]
max-line-length = 160
builtins = unicode

[testenv:flake8]
dependency_groups = lint
commands =
    flake8 --exclude=doc,.tox,.venv
    flake8 --max-line-length=100 --ignore=E265 doc

[testenv:isort]
dependency_groups = lint
commands = isort -w 120 -rc luigi test examples bin

[testenv:docs]
# need Python 3.10
basepython = py310
# Build documentation using sphinx.
# Call this using `tox run -e docs`.
dependency_groups = docs
commands =
# build API docs
    sphinx-apidoc -o doc/api -T luigi --separate

# build HTML docs
    sphinx-build -W -b html -d {envtmpdir}/doctrees doc doc/_build/html
